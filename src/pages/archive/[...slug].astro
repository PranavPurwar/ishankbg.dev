---
import { getCollection } from "astro:content";
import Schema from "../../components/schema.astro";
import Layout from "../../components/BlogLayout.astro";
import type {InferGetStaticPropsType} from "astro";
import "../../assets/aside.css";
export async function getStaticPaths() {
	const posts = await getCollection("blog", ({data}) => {
		return import.meta.env.PROD ? data.draft !== true : true;
	});
    return posts.map(entry => ({
        params: { slug: entry.slug }, props: { entry },
    }));
}
const { entry } = Astro.props as InferGetStaticPropsType<typeof getStaticPaths> ;
const { Content, remarkPluginFrontmatter } = await entry.render();
---
<Layout
        title={entry.data.title}
        description={entry.data.description}
        keywords={entry.data.tags}
        url={`https://ishankbg.dev/blog/${entry.slug}`}
>
    <Schema
    item={{
        "@context": "https://schema.org",
        "@type": "BlogPosting",
        "headline": entry.data.title,
        "datePublished": new Date(entry.data.pubDate).toISOString(),
		"dateModified": new Date(remarkPluginFrontmatter.lastModified).toISOString(),
		"author": {
            "@type": "Person",
            "name": "Ishan Jaiswal",
            "url": `${Astro.site}/about`
        },
        "description": entry.data.description,
    }}
    />

    <header class="flex flex-col gap-4">
        <h1 class="text-2xl md:text-4xl font-bold text-gray-700 dark:text-gray-100">{entry.data.title }</h1>
	<p class="font-light text-gray-800 dark:text-gray-200 text-sm">Published on <time datetime={new Date(entry.data.pubDate).toISOString()}>{new Date(entry.data.pubDate).toLocaleDateString()}</time>  {remarkPluginFrontmatter.minutesRead}</p>
    </header>
    <article class="prose dark:prose-invert prose-h1:text-3xl max-w-none px-2 md:px-4 py-2 md:py-4 text-lg antialiased break-words">
       <Content />
    </article>
</Layout>
